---
title: "Scrape"
author: "Cathal and Daniel"
format:
  pdf: default
editor_options: 
  chunk_output_type: console
---

```{r}
library(httr2)
library(stringr)
library(jsonlite)
library(tidyverse)
key <- readLines("api_token")
```


# Scraping

```{r}
# This function scrapes the raw variables that we want. No wrangling is done here
get_fda_data <- function(date1,date2) {
  
  # make the request
  endpoint <- "https://api.fda.gov/drug/event.json"
  
  req <- request(str_c(
    endpoint,  
    "?api_key=", key, 
    "&search=receivedate:[", 
    date1, 
    "+TO+", 
    date2, 
    "]&limit=",
    1000
  ))
  resp <- req_perform(req)
  
  # if json is desired
  resp <- resp |>
    resp_body_json()
  
  id_ = double()
  onset_age = character()
  sex = character()
  weight = character()
  effects = character()
  qualification = character() # indicator
  country = character()
  drug = character()
  drug_role = character() # indicator
  drug_start = character()
  receive_date = character()
  seriousness = character()
  death = character()
  
  
  
  for(i in 1:length(resp$results)) {
    for (d in 1:length(resp$results[[i]]$patient$drug)) {
      id_ <- c(id_, resp$results[[i]]$safetyreportid %||% NA)
      onset_age <- c(onset_age, resp$results[[i]]$patient$patientonsetage %||% NA)
      sex <- c(sex, resp$results[[i]]$patient$patientsex %||% NA)
      weight <- c(weight, resp$results[[i]]$patient$patientweight %||% NA)
      effects <- c(effects, if (!is.null(resp$results[[i]]$patient$reaction)) {
        paste(sapply(resp$results[[i]]$patient$reaction, function(x) x$reactionmeddrapt %||% NA), collapse = ";")
      } else { NA })
      qualification <- c(qualification, resp$results[[i]]$primarysource$qualification %||% NA)
      country <- c(country, resp$results[[i]]$occurcountry %||% NA)
      drug <- c(drug, resp$results[[i]]$patient$drug[[d]]$medicinalproduct %||% NA)
      drug_role <- c(drug_role, resp$results[[i]]$patient$drug[[d]]$drugcharacterization %||% NA)
      drug_start <- c(drug_start, resp$results[[i]]$patient$drug[[d]]$drugstartdate %||% NA)
      receive_date <- c(receive_date, resp$results[[i]]$receivedate %||% NA)
      seriousness <- c(seriousness, resp$results[[i]]$serious %||% NA)
      death <- c(death, resp$results[[i]]$seriousnessdeath %||% NA)


    }
    
  }
  
  
  drug_tbl <- tibble(
    id = id_,
    onset_age = onset_age,
    sex = sex,
    weight = weight,
    effects = effects,
    qualification = qualification, # indicator
    country = country,
    drug = drug,
    drug_role = drug_role, # indicator
    drug_start = drug_start,
    receive_date = receive_date,
    seriousness = seriousness,
    death = death
    
  )
    
  return(drug_tbl)
  
}

drugs <- tibble(
  id = double(),
  onset_age = character(),
  sex = character(),
  weight = character(),
  effects = character(),
  qualification = character(), # indicator
  country = character(),
  drug = character(),
  drug_role = character(), # indicator
  drug_start = character(),
  receive_date = character(),
  seriousness = character(),
  death = character()
)

library(lubridate)
start <- ymd("2019-01-01")
d <- start
a <- 0
end <- ymd("2020-01-01")

while (d<end-15) {
  date1 <- format(d, "%Y%m%d")
  date2 <- format(d + 14, "%Y%m%d")
  drugs <- rbind(drugs, get_fda_data(date1, date2))
  d <- d + 15
  a <- a + 15
  print(str_c(a/(10*364), " done"))
}

# Write the csv file
write.csv(drugs, "drugs_raw.csv")
```

# Wrangling

```{r}
drugs_raw <- read.csv("drugs_raw.csv")

# Set factors, types
drugs_typed <- drugs_raw |>
  mutate(
    sex = factor(
      as.character(sex), 
      levels = c("0","1","2"), 
      labels = c(NA_character_, "Male", "Female")
    ),
    qualification = factor(
      as.character(qualification),
      levels = c("1","2","3","4","5"),
      labels = c(
        "Physician",
        "Pharmacist",
        "Other health professional",
        "Lawyer", 
        "Consumer or non-health professional"
      )
    ),
    drug_role = factor(
      as.character(drug_role),
      levels = c("1","2","3"),
      labels = c("Suspect","Concomitant","Interaction")
    ),
    seriousness = factor(
      as.character(seriousness),
      levels = c("1","2"),
      labels = c("Serious","Not Serious")
    ),
    onset_age = ifelse(
      onset_age > 125,
      floor(onset_age/324),
      onset_age
    ),
    death = ifelse(is.na(death), "Not Dead", ifelse(death=="0" | death==0, "Not Dead", "Dead"))
    
  )

# Standardize dates
drugs_typed <- drugs_typed |>
  mutate(
    drug_start = ifelse(
      str_length(as.character(drug_start))==8,
      as.character(drug_start),
      NA
    ),
    receive_date = ifelse(
      str_length(as.character(receive_date))==8,
      as.character(receive_date),
      NA
    )
  )
drugs_typed <- drugs_typed |>
  mutate(drug_start = ymd(drug_start), receive_date = ymd(receive_date))

# Create new variable
drugs_typed <- drugs_typed |>
  mutate(days_until_report = ifelse(drug_role=="Suspect", receive_date - drug_start, NA))

write.csv(drugs_typed, "drugs.csv")

# make a dataset that is collapsed by report
reports <- drugs_typed |>
  distinct(id,onset_age,sex,weight,effects,qualification,country,receive_date,seriousness,death)
write.csv(reports, "reports.csv")
```

